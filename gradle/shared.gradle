apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'checkstyle'
apply plugin: 'jacoco-coverage'
apply plugin: 'com.github.hierynomus.license'

apply from: "${rootDir}/gradle/publish.gradle"

sourceCompatibility = 1.8

version = rootProject.version
group = rootProject.group

repositories {
    mavenCentral()
    maven {
        url 'http://dl.bintray.com/palantir/releases/'
    }
}

checkstyle {
    toolVersion = 6.17
    configFile rootProject.file('config/checkstyle/checkstyle.xml')
}

apply from: rootProject.file('gradle/versions.gradle')
libsDirName = file('build/artifacts')

dependencies {
    checkstyle 'com.puppycrawl.tools:checkstyle:6.6'
    testCompile group: 'junit', name: 'junit', version: libVersions.junit
}

configurations.matching({ it.name in ['compile', 'runtime'] }).all {
    resolutionStrategy {
        force 'com.google.code.findbugs:jsr305:' + libVersions.jsr305
        force 'org.slf4j:slf4j-api:' + libVersions.slf4j
    }
}

apply from: rootProject.file('gradle/javadoc.gradle'), to: javadoc

license {
    header rootProject.file('config/HEADER')
    skipExistingHeaders true

    ext.year = Calendar.getInstance().get(Calendar.YEAR)

    include '**/*.java'
    exclude '**/generated/**/*.java'
}

ext {
    schemas = []
}

task generateSchemas {
    description = 'Re-generate code from AtlasDB schemas.'
    dependsOn classes, testClasses
}

afterEvaluate {
    schemas.each { schema ->
        generateSchemas << {
            logger.info "Processing schemas for ${schema}"
            javaexec {
                main schema
                classpath sourceSets.test.runtimeClasspath
            }
        }
    }
}
